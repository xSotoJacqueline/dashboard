/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardSportsbookRouteImport } from './routes/dashboard/sportsbook'
import { Route as DashboardRetirosRouteImport } from './routes/dashboard/retiros'
import { Route as DashboardMetricasRouteImport } from './routes/dashboard/metricas'
import { Route as DashboardMarketingRouteImport } from './routes/dashboard/marketing'
import { Route as DashboardJugadoresRouteImport } from './routes/dashboard/jugadores'
import { Route as DashboardDepositosRouteImport } from './routes/dashboard/depositos'
import { Route as DashboardBonosRouteImport } from './routes/dashboard/bonos'
import { Route as DashboardBenchmarkRouteImport } from './routes/dashboard/benchmark'
import { Route as authLoginRouteImport } from './routes/(auth)/login'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSportsbookRoute = DashboardSportsbookRouteImport.update({
  id: '/sportsbook',
  path: '/sportsbook',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardRetirosRoute = DashboardRetirosRouteImport.update({
  id: '/retiros',
  path: '/retiros',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardMetricasRoute = DashboardMetricasRouteImport.update({
  id: '/metricas',
  path: '/metricas',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardMarketingRoute = DashboardMarketingRouteImport.update({
  id: '/marketing',
  path: '/marketing',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardJugadoresRoute = DashboardJugadoresRouteImport.update({
  id: '/jugadores',
  path: '/jugadores',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardDepositosRoute = DashboardDepositosRouteImport.update({
  id: '/depositos',
  path: '/depositos',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardBonosRoute = DashboardBonosRouteImport.update({
  id: '/bonos',
  path: '/bonos',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardBenchmarkRoute = DashboardBenchmarkRouteImport.update({
  id: '/benchmark',
  path: '/benchmark',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof authRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/dashboard/benchmark': typeof DashboardBenchmarkRoute
  '/dashboard/bonos': typeof DashboardBonosRoute
  '/dashboard/depositos': typeof DashboardDepositosRoute
  '/dashboard/jugadores': typeof DashboardJugadoresRoute
  '/dashboard/marketing': typeof DashboardMarketingRoute
  '/dashboard/metricas': typeof DashboardMetricasRoute
  '/dashboard/retiros': typeof DashboardRetirosRoute
  '/dashboard/sportsbook': typeof DashboardSportsbookRoute
}
export interface FileRoutesByTo {
  '/': typeof authRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/dashboard/benchmark': typeof DashboardBenchmarkRoute
  '/dashboard/bonos': typeof DashboardBonosRoute
  '/dashboard/depositos': typeof DashboardDepositosRoute
  '/dashboard/jugadores': typeof DashboardJugadoresRoute
  '/dashboard/marketing': typeof DashboardMarketingRoute
  '/dashboard/metricas': typeof DashboardMetricasRoute
  '/dashboard/retiros': typeof DashboardRetirosRoute
  '/dashboard/sportsbook': typeof DashboardSportsbookRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/dashboard/benchmark': typeof DashboardBenchmarkRoute
  '/dashboard/bonos': typeof DashboardBonosRoute
  '/dashboard/depositos': typeof DashboardDepositosRoute
  '/dashboard/jugadores': typeof DashboardJugadoresRoute
  '/dashboard/marketing': typeof DashboardMarketingRoute
  '/dashboard/metricas': typeof DashboardMetricasRoute
  '/dashboard/retiros': typeof DashboardRetirosRoute
  '/dashboard/sportsbook': typeof DashboardSportsbookRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/benchmark'
    | '/dashboard/bonos'
    | '/dashboard/depositos'
    | '/dashboard/jugadores'
    | '/dashboard/marketing'
    | '/dashboard/metricas'
    | '/dashboard/retiros'
    | '/dashboard/sportsbook'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/benchmark'
    | '/dashboard/bonos'
    | '/dashboard/depositos'
    | '/dashboard/jugadores'
    | '/dashboard/marketing'
    | '/dashboard/metricas'
    | '/dashboard/retiros'
    | '/dashboard/sportsbook'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/dashboard'
    | '/(auth)/login'
    | '/dashboard/benchmark'
    | '/dashboard/bonos'
    | '/dashboard/depositos'
    | '/dashboard/jugadores'
    | '/dashboard/marketing'
    | '/dashboard/metricas'
    | '/dashboard/retiros'
    | '/dashboard/sportsbook'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/sportsbook': {
      id: '/dashboard/sportsbook'
      path: '/sportsbook'
      fullPath: '/dashboard/sportsbook'
      preLoaderRoute: typeof DashboardSportsbookRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/retiros': {
      id: '/dashboard/retiros'
      path: '/retiros'
      fullPath: '/dashboard/retiros'
      preLoaderRoute: typeof DashboardRetirosRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/metricas': {
      id: '/dashboard/metricas'
      path: '/metricas'
      fullPath: '/dashboard/metricas'
      preLoaderRoute: typeof DashboardMetricasRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/marketing': {
      id: '/dashboard/marketing'
      path: '/marketing'
      fullPath: '/dashboard/marketing'
      preLoaderRoute: typeof DashboardMarketingRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/jugadores': {
      id: '/dashboard/jugadores'
      path: '/jugadores'
      fullPath: '/dashboard/jugadores'
      preLoaderRoute: typeof DashboardJugadoresRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/depositos': {
      id: '/dashboard/depositos'
      path: '/depositos'
      fullPath: '/dashboard/depositos'
      preLoaderRoute: typeof DashboardDepositosRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/bonos': {
      id: '/dashboard/bonos'
      path: '/bonos'
      fullPath: '/dashboard/bonos'
      preLoaderRoute: typeof DashboardBonosRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/benchmark': {
      id: '/dashboard/benchmark'
      path: '/benchmark'
      fullPath: '/dashboard/benchmark'
      preLoaderRoute: typeof DashboardBenchmarkRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardBenchmarkRoute: typeof DashboardBenchmarkRoute
  DashboardBonosRoute: typeof DashboardBonosRoute
  DashboardDepositosRoute: typeof DashboardDepositosRoute
  DashboardJugadoresRoute: typeof DashboardJugadoresRoute
  DashboardMarketingRoute: typeof DashboardMarketingRoute
  DashboardMetricasRoute: typeof DashboardMetricasRoute
  DashboardRetirosRoute: typeof DashboardRetirosRoute
  DashboardSportsbookRoute: typeof DashboardSportsbookRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardBenchmarkRoute: DashboardBenchmarkRoute,
  DashboardBonosRoute: DashboardBonosRoute,
  DashboardDepositosRoute: DashboardDepositosRoute,
  DashboardJugadoresRoute: DashboardJugadoresRoute,
  DashboardMarketingRoute: DashboardMarketingRoute,
  DashboardMetricasRoute: DashboardMetricasRoute,
  DashboardRetirosRoute: DashboardRetirosRoute,
  DashboardSportsbookRoute: DashboardSportsbookRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
