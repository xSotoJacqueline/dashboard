/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedRootRouteImport } from './routes/_authenticated/root'
import { Route as AuthenticatedRetirosRouteImport } from './routes/_authenticated/retiros'
import { Route as authLoginRouteImport } from './routes/(auth)/login'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRootRoute = AuthenticatedRootRouteImport.update({
  id: '/_authenticated/root',
  path: '/root',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRetirosRoute = AuthenticatedRetirosRouteImport.update({
  id: '/_authenticated/retiros',
  path: '/retiros',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/retiros': typeof AuthenticatedRetirosRoute
  '/root': typeof AuthenticatedRootRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/retiros': typeof AuthenticatedRetirosRoute
  '/root': typeof AuthenticatedRootRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)/login': typeof authLoginRoute
  '/_authenticated/retiros': typeof AuthenticatedRetirosRoute
  '/_authenticated/root': typeof AuthenticatedRootRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/retiros' | '/root'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/retiros' | '/root'
  id:
    | '__root__'
    | '/'
    | '/(auth)/login'
    | '/_authenticated/retiros'
    | '/_authenticated/root'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLoginRoute: typeof authLoginRoute
  AuthenticatedRetirosRoute: typeof AuthenticatedRetirosRoute
  AuthenticatedRootRoute: typeof AuthenticatedRootRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/root': {
      id: '/_authenticated/root'
      path: '/root'
      fullPath: '/root'
      preLoaderRoute: typeof AuthenticatedRootRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/retiros': {
      id: '/_authenticated/retiros'
      path: '/retiros'
      fullPath: '/retiros'
      preLoaderRoute: typeof AuthenticatedRetirosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLoginRoute: authLoginRoute,
  AuthenticatedRetirosRoute: AuthenticatedRetirosRoute,
  AuthenticatedRootRoute: AuthenticatedRootRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
